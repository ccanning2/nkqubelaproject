<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <http use-expressions="true">
        <intercept-url pattern="/" access="hasAnyRole('General', 'Supervisor', 'User', 'Manager')"/>
        <!-- <intercept-url pattern="/addPerson.html" access="hasRole('Supervisor')"/>
        <intercept-url pattern="/addHotel.html" access="hasRole('Supervisor')"/>
        <intercept-url pattern="/deletePerson.html" access="hasRole('Manager')"/>
        <intercept-url pattern="/deleteHotel.html" access="hasAnyRole('Supervisor', 'Manager')"/>
        <intercept-url pattern="/viewUser.html" access="hasAnyRole('General', 'Supervisor', 'User', 'Manager')"/> -->
       <form-login login-page="/login" default-target-url="/" authentication-failure-url="/loginfailed" />
       <logout logout-success-url="/"/>
       <access-denied-handler error-page="/accessDenied.html"/>
    </http>    
    
    <global-method-security secured-annotations="enabled"/>
    
     <authentication-manager alias="authenticationManager">
            <authentication-provider>
                <password-encoder hash="md5"/>
                <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT username, password, enabled FROM Users  WHERE username=?"
                    authorities-by-username-query="SELECT u.username, r.rolename FROM Users u, Roles r WHERE u.id = r.users_id AND u.username = ?"/>
            </authentication-provider>
   </authentication-manager>
</beans:beans>   